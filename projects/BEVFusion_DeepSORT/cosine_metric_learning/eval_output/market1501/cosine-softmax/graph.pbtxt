node {
  name: "Placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 75
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 75
        }
      }
    }
  }
}
node {
  name: "fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fifo_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "fifo_queue"
  input: "Placeholder"
  input: "Placeholder_1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "fifo_queue_Close"
  op: "QueueCloseV2"
  input: "fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1341
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1341
          }
        }
        string_val: "./downloads/datasets/market1501/bounding_box_test/0031_c1s1_002576_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0031_c1s1_002601_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0031_c2s1_001876_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0031_c4s1_002476_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0031_c4s1_002501_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0031_c4s1_002501_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c1s1_003226_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c1s1_004376_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c1s1_004401_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c2s1_002551_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c2s1_002651_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c2s1_003776_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c2s1_003826_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c2s1_003901_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c3s1_002851_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c3s1_002876_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c3s1_003401_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c3s1_003576_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c3s1_003851_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c5s1_003151_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c5s1_003201_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c5s1_004401_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003451_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003476_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003501_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003526_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003551_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003576_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003601_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003751_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003801_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003826_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003851_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003851_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003876_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003901_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_003926_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_004051_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_004076_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0036_c6s1_004101_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c1s1_004626_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c1s1_004676_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c2s1_003901_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c2s1_003976_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c3s1_003926_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c3s1_004226_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c3s1_004251_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c4s1_004876_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c4s1_005026_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c5s1_004426_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c5s1_004651_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c5s1_004701_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0044_c5s1_004926_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0102_c2s1_017176_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0102_c4s1_017301_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c1s1_035276_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c1s1_035301_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c1s1_035326_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c2s1_018001_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c2s1_018026_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c3s1_018226_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c3s1_018326_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c3s1_034476_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c3s1_034501_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c4s1_035126_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c4s1_035151_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c5s1_035176_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c5s1_035201_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c5s1_035226_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c5s1_035276_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c6s1_018901_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c6s1_035001_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c6s1_035076_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0109_c6s1_035101_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s1_030126_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s1_030151_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s1_030851_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s1_030926_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s5_017061_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s5_017161_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s5_017211_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c1s5_059241_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c2s1_029451_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c2s2_149727_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c2s3_026607_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s1_029376_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s2_152419_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s2_152444_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s3_032928_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s3_032928_12.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s3_033028_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c3s3_033053_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c4s1_030201_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c4s1_030726_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c4s1_030751_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c4s5_016354_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c4s5_016404_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c5s2_152899_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c5s2_152924_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c5s3_033715_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c5s3_033715_14.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c5s3_033740_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0161_c6s3_056792_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c1s1_053276_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c1s1_053401_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c1s1_053626_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c2s1_053051_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c2s1_053051_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c2s1_053176_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c2s1_070571_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c2s1_070671_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_030651_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_031151_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_031176_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_031301_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_031326_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_031451_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_032426_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_032426_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_052576_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_052726_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c3s1_097992_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053276_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053326_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053376_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053401_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053701_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053701_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053726_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_053726_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_071123_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_098323_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_098348_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_098398_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_098423_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c5s1_098523_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_031026_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_031226_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_031851_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_052901_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_052976_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_053001_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_053026_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_053076_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0174_c6s1_053176_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c1s1_039701_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c1s1_039801_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c1s2_002641_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c1s2_002716_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c1s2_002766_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c1s2_019491_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_038676_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_038751_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_038751_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_038776_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_038776_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_039176_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_039176_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_075021_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_075046_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c2s1_091821_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c3s1_039426_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c3s1_039451_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c3s1_074667_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c3s1_074692_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c3s1_092042_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_039726_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_039776_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_039776_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_039851_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_039901_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_075373_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_075523_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c5s1_092348_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_039951_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_039976_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_040026_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_040051_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_075126_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_075151_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_075176_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_075201_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0198_c6s1_075226_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c1s1_042176_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c1s1_045276_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c1s1_045426_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c1s2_019566_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c1s2_047821_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c2s1_045176_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c2s1_045276_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c2s1_091696_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c3s1_044751_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c3s1_091992_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c3s1_092092_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s1_041401_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s1_041626_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s2_019992_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s2_020067_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s2_020067_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s2_047448_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s2_047448_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c4s2_047473_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_042126_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_042151_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_042176_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_042301_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_042526_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_043076_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_043151_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_043526_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_044826_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_092473_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_092523_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_092548_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_092648_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_092673_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c5s1_092748_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c6s1_043401_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c6s1_043776_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c6s1_044476_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0207_c6s1_045226_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c1s1_051526_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c1s1_063556_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c1s1_063656_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c1s1_063681_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c2s1_050951_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c2s1_051026_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c2s1_063146_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c2s1_063171_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c3s1_051201_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c3s1_051226_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c3s1_062867_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c3s1_062917_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c5s1_063498_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c5s1_063548_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c5s1_063573_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c5s1_063723_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c5s1_063723_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_051776_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_051801_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_051826_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_063326_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_063351_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_063401_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_063426_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0247_c6s1_063451_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c1s1_052726_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c1s1_052801_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c1s1_058406_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c1s1_058481_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c3s1_052226_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c3s1_052276_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c3s1_057767_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c3s1_057842_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c5s1_052626_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c5s1_052726_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c5s1_052801_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c5s1_058423_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c5s1_058448_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c5s1_058723_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_052776_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_052801_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_052826_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_052851_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_052876_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058226_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058251_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058276_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058301_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058301_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058326_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0252_c6s1_058351_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c1s1_054651_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c1s1_054676_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c1s1_065706_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c2s1_054026_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c2s1_054026_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c2s1_054151_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c2s1_065146_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c3s1_054051_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c3s1_054326_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c3s1_064892_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c5s1_054576_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c5s1_054701_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c5s1_065698_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c6s1_054901_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c6s1_054926_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c6s1_054951_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c6s1_065401_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0257_c6s1_065426_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c1s1_053251_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c1s1_053276_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c1s5_019311_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c1s5_019336_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c1s6_008316_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c1s6_008366_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c2s1_052526_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c2s2_151702_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c2s2_151852_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c2s3_050607_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c3s2_154519_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c3s2_154544_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c3s2_154569_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c3s3_057078_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c3s3_057103_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c3s3_057253_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c4s1_053926_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c4s1_054026_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c4s1_054076_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c4s6_008910_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c5s3_057615_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c5s3_057890_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c5s3_057940_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c6s3_016392_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0262_c6s3_016417_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c1s1_056206_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c1s1_056331_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c1s1_063306_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c1s1_063356_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c3s1_055767_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c3s1_055817_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c3s1_062642_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c3s1_062667_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c3s1_062717_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c5s1_056323_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c5s1_063248_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056276_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056301_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056301_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056326_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056351_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056376_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056401_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056426_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056451_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_056476_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063101_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063126_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063151_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063176_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063201_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063226_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0265_c6s1_063276_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c2s3_073677_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c2s3_073727_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c3s3_079969_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c3s3_079994_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c3s3_080019_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c6s4_006502_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0291_c6s4_006527_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c1s6_016771_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c2s3_059252_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c2s3_059277_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c3s3_065569_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c3s3_065619_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c5s3_065912_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c6s3_089317_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0305_c6s3_089342_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c1s1_070656_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c1s1_070731_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c1s1_072556_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c1s1_072681_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c2s1_070021_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c2s1_072771_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c2s1_072771_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c3s1_070167_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c3s1_070242_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c3s1_071917_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c5s1_070673_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c5s1_070698_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c5s1_070748_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c5s1_072573_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c5s1_072623_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c5s1_072673_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c6s1_070801_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c6s1_070826_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c6s1_072351_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c6s1_072451_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0312_c6s1_072526_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c1s6_032071_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c1s6_032096_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c2s3_074527_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c2s3_074577_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c2s3_074602_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c3s3_080819_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c3s3_080869_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c5s3_081212_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c5s3_081237_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0320_c6s4_007327_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c1s2_002941_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c1s2_002966_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c3s1_075317_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c3s1_075367_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c3s1_075417_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c3s1_075442_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_075698_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_075723_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_075798_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_075848_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_075898_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_079923_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c5s1_079923_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c6s1_075801_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c6s1_075826_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c6s1_075851_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c6s1_076026_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c6s1_076101_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0330_c6s1_076151_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c1s2_007791_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c1s2_010891_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c3s1_080192_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c3s1_080192_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c3s1_080267_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c3s1_083067_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c3s1_083092_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c3s1_083217_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c5s1_080648_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c5s1_080698_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c5s1_080798_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c5s1_083773_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c5s1_083823_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_080726_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_080776_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_080851_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_080851_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_080876_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_083551_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_083626_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_083626_09.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_083651_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0353_c6s1_083676_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c3s1_081467_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c3s1_081542_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c3s1_081567_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c4s2_008817_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c4s2_008842_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c4s2_008867_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c5s1_081948_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c5s1_081973_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c5s1_082048_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c6s1_082026_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c6s1_082051_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c6s1_082101_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c6s1_082126_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0355_c6s1_082201_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c1s2_017666_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c1s2_052696_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c1s2_052746_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_090017_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_090042_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_090092_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_099017_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_099142_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_124958_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_124958_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_124983_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_125083_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c3s1_125858_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_090498_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_090548_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_090623_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_099723_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_099723_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_099748_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_099773_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0381_c5s1_126445_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c1s2_021016_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c1s2_021041_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c1s2_033166_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c2s1_093246_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c2s1_093246_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c2s1_093271_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c2s1_093271_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c2s1_105446_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c2s1_105446_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c3s1_093517_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c3s1_093567_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c3s1_105217_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0396_c5s1_106073_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c1s2_056446_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c2s1_106821_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c2s1_106896_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c2s1_128866_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c3s1_107092_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c3s1_107117_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c3s1_128408_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0438_c3s1_128433_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c1s2_050246_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c1s2_050296_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c1s2_057296_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c1s2_057496_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c2s1_122541_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c2s1_122566_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c2s1_129816_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c3s1_122458_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c3s1_122783_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c3s1_122808_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c3s1_122933_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c3s1_129558_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c3s1_129633_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c4s2_050698_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c4s2_050723_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c4s2_050748_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c4s2_056773_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c4s2_056823_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_123020_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_123070_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_123595_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_123645_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_123670_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_129995_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0473_c5s1_130020_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c1s2_049896_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c1s2_049971_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c1s2_049971_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c1s2_049996_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c3s1_122333_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c3s1_122458_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c5s1_122770_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c5s1_122795_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0474_c5s1_122845_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c1s2_051496_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c3s1_124008_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c3s1_124083_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c3s1_124108_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c4s2_051323_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c4s2_051348_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c4s2_051373_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c5s1_124495_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0476_c5s1_124595_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c1s2_056696_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c1s2_059246_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c2s1_128891_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c2s1_128991_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c2s1_129016_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c2s1_131566_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c3s1_129158_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c3s1_129183_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c3s1_130508_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c3s1_130533_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c3s1_130558_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c3s1_131308_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c5s1_129495_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0489_c5s1_131920_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c1s2_064721_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c1s2_064821_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c1s3_001446_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c1s3_022226_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s1_135441_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s1_137141_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s1_137141_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s1_137166_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s1_148716_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s2_004687_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c2s2_004787_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_135558_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_135583_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_135608_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_136908_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_136933_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_136933_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s1_148883_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s2_007512_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s2_007562_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c3s2_007562_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c5s1_137545_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c5s2_039030_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c5s2_039030_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c6s2_001618_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c6s2_001643_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c6s2_014493_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c6s2_032218_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0501_c6s2_032243_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c1s3_001321_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c1s3_016396_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c1s3_016421_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c2s1_148416_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c2s1_148541_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c2s1_163666_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c2s1_163666_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c2s1_163691_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c3s1_148708_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c3s2_001696_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0527_c3s2_001721_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c1s3_010396_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c2s1_157566_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c2s1_157591_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c2s2_028037_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c2s2_028062_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c3s1_157808_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c3s1_157883_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c3s2_030787_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c3s2_030837_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c6s2_024868_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c6s2_024893_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0548_c6s2_024943_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c1s3_019626_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c1s3_019676_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c3s2_005237_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c3s2_005362_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c3s2_005362_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c3s2_005387_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c3s2_005387_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c5s2_005805_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c5s2_005830_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c5s2_005830_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0568_c5s2_005905_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c1s3_024801_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c1s3_024851_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c1s3_024876_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c1s3_033376_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c1s3_033676_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c2s2_007087_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c2s2_007312_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c2s2_007337_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c2s2_016187_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c2s2_016212_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c3s2_010512_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c3s2_010587_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c3s2_018987_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c3s2_019012_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c4s3_032779_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c4s3_032804_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c4s3_032979_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c4s3_033004_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c5s2_011030_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c5s2_011055_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c5s2_011055_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c5s2_019405_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c5s2_019430_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c5s2_019480_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c6s2_004718_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c6s2_004743_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c6s2_004768_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c6s2_006118_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0577_c6s2_006143_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c1s3_026926_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c1s3_026976_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c1s3_056651_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c1s3_056676_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c3s2_012412_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c3s2_012587_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c3s2_041912_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c3s2_041962_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c5s2_012980_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c5s2_013105_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c5s2_013130_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c5s2_013180_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c5s2_042630_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c6s2_006818_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c6s2_006843_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c6s2_035993_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c6s2_036018_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c6s2_036068_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0582_c6s2_036093_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c1s3_026926_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c1s3_026976_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c1s3_056651_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c1s3_056676_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c1s3_057326_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_012412_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_012512_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_041912_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_041962_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_042862_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_042887_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c3s2_042887_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_012980_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_013055_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_013105_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_042630_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_042680_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_042680_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_043430_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c5s2_043455_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_006718_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_006743_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_006768_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_006793_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_036068_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_036093_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0583_c6s2_037093_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c1s3_027726_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c1s3_047201_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c2s2_010212_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c2s2_010237_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c2s2_010262_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c2s2_010262_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c2s2_010287_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c2s2_029687_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c3s2_013437_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c3s2_013512_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c3s2_032437_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c3s2_032462_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c6s2_007693_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c6s2_007743_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c6s2_026568_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0590_c6s2_026593_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c1s3_046176_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c1s3_055101_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c2s2_028662_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c2s2_028712_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c2s2_028712_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c2s2_037762_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c3s2_031837_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c3s2_031862_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c3s2_040512_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c3s2_040537_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c3s2_040537_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c5s2_032280_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c5s2_041155_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c5s2_041180_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c5s2_041180_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c6s2_026068_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c6s2_034618_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0643_c6s2_034643_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c1s3_068776_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c1s3_068826_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c2s2_051212_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c2s2_051337_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c3s2_054487_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c3s2_054512_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c3s2_054587_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c5s2_054930_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c6s2_048793_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0699_c6s2_048843_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c1s3_073681_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c1s3_073706_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c2s2_056157_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c2s2_056157_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c2s2_056182_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c2s2_056182_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c3s2_059353_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c3s2_059378_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c6s2_053593_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c6s2_053618_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0716_c6s2_053643_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c1s4_000906_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c1s4_000931_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c1s4_000981_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c1s4_001006_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c1s4_019456_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c3s2_061603_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c3s2_061628_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c3s2_079703_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c3s2_079728_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c3s2_079753_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c3s2_079778_09.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_072810_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_072810_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_072835_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_072960_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_072985_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_073535_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_073535_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_073560_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_073760_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_073960_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_074060_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s3_074235_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c4s4_019760_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c5s2_080327_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_055693_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_055743_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_055968_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_056068_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_073768_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_073843_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_073868_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_073893_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_073918_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0720_c6s2_073993_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c1s4_000931_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c1s4_000981_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c1s4_001006_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c1s4_019431_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c1s4_019456_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c3s2_061728_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c3s2_061753_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c3s2_061803_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c3s2_079753_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c3s2_079903_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c3s2_079928_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c4s3_073910_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c4s3_073935_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c4s3_074010_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c5s2_061927_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c5s2_061977_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c5s2_062002_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c5s2_080652_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_055693_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_055718_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_055743_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_055968_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_056068_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_073993_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0725_c6s2_074118_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c1s4_009756_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c1s4_009856_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c1s4_009981_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c1s4_044181_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c1s4_044206_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c1s4_044231_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c2s2_067182_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c2s2_067207_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c2s2_067232_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c2s2_067257_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c2s2_101732_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c2s2_101807_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c3s2_104428_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c3s2_104453_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c4s4_010010_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c4s4_043535_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c4s4_043560_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_070802_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_070977_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_071052_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_071077_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_071202_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_104877_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_104902_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_104902_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c5s2_104952_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c6s2_064593_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c6s2_064643_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c6s2_098568_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0745_c6s2_098643_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c1s4_008406_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c3s2_068678_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c4s4_008210_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c4s4_008235_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c4s4_008260_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c4s4_008260_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c4s4_008310_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c5s2_069377_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c5s2_069402_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c5s2_069427_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c6s2_062718_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c6s2_062743_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c6s2_062768_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c6s2_062793_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0746_c6s2_062868_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c1s4_009256_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c1s4_009356_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c1s4_009381_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c3s2_069528_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c3s2_069553_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c3s2_069578_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c3s2_069653_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c4s4_009160_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c4s4_009185_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c4s4_009185_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c4s4_009235_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c4s4_009285_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c4s4_009310_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c5s2_070227_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c5s2_070252_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c5s2_070302_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c5s2_070327_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c5s2_070377_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c6s2_063693_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c6s2_063718_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0751_c6s2_063793_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c1s6_020296_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c1s6_020346_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c3s3_068919_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c3s3_068994_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c3s3_069019_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c3s3_069019_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c3s3_069069_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c5s3_069462_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c5s3_069537_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c5s3_069537_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c5s3_069562_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c6s3_092792_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0791_c6s3_092792_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c2s2_086182_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c2s2_086207_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c2s2_109882_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c3s2_089303_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c3s2_089353_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c3s2_112653_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c3s2_112678_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c5s2_089802_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c6s2_083543_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c6s2_083568_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c6s2_083593_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c6s2_106743_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0794_c6s2_106768_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c1s4_048006_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c1s4_048006_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c2s2_105407_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c2s2_105432_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c2s2_105582_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c3s2_108128_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0866_c3s2_108153_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c1s4_049006_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c1s4_049031_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c1s4_049056_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c1s4_049081_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c1s4_049106_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c1s4_049131_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c2s2_106632_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c3s2_109203_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c3s2_109253_09.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c3s2_109278_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c3s2_109303_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0884_c6s2_103393_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c1s4_049506_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c1s4_049531_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c1s4_049556_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c1s4_049681_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c1s4_049706_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c1s4_066186_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c2s2_106982_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c2s2_107082_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c2s2_123602_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c2s2_123627_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c3s2_110253_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c3s2_110303_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c3s2_110328_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c3s2_110378_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c3s2_126319_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c5s2_110652_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c5s2_110802_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c5s2_127249_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_104518_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_104543_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_104593_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_120393_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_120418_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_120443_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0899_c6s2_120468_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c2s2_109282_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c2s2_109332_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c3s2_112078_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c3s2_112103_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c5s2_112902_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c5s2_113002_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c6s2_106193_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c6s2_106218_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0906_c6s2_106243_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c1s4_054411_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c2s2_111927_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c2s2_111952_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c3s2_114694_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c3s2_114719_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c5s2_115474_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c6s2_108793_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c6s2_108818_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0920_c6s2_108843_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c1s4_054386_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c1s4_054436_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c1s5_001436_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c1s5_001661_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c3s2_115069_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c3s2_115094_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c3s2_115144_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c3s2_136719_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c3s2_136794_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c5s2_115674_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c5s2_137424_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c6s2_109368_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c6s2_109418_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c6s2_130793_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0924_c6s2_130843_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c2s2_122552_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c2s2_122602_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c2s2_122627_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c2s2_134752_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c2s2_134777_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c3s2_125794_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c3s2_125819_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c3s2_137519_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c3s2_137544_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c5s2_138374_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c6s2_119993_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/0980_c6s2_120018_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c1s4_070361_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c1s4_070386_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c1s4_070411_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c1s4_070461_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c1s4_070536_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c3s2_130544_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c3s2_130644_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c5s2_131224_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c5s2_131349_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c6s2_124543_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c6s2_124593_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1015_c6s2_124643_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c1s4_071011_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c1s4_071086_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c1s4_071111_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c1s4_071286_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c2s2_128977_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c3s2_130869_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c3s2_131044_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c3s2_131194_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c3s2_131244_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c5s2_131974_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c5s2_132124_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c6s2_124968_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c6s2_124993_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c6s2_125193_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c6s2_125293_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c6s2_125318_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1020_c6s2_125368_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c1s5_009261_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c1s5_009286_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c1s5_009361_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c1s5_015136_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c1s5_015186_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c1s5_015236_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c2s2_147577_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c2s2_147702_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c3s2_144844_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c3s2_144894_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c3s2_144919_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c3s2_144969_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c3s2_150294_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c3s2_150319_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c5s2_145249_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c5s2_145324_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c5s2_145374_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c6s3_006867_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c6s3_006867_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c6s3_006892_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c6s3_006942_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c6s3_012117_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1082_c6s3_012142_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c1s5_010761_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c1s5_010861_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c3s2_145869_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c3s2_145894_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c4s5_010529_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c5s2_146574_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c5s2_146599_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c5s2_146624_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007067_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007092_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007117_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007292_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007442_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007767_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1083_c6s3_007817_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c1s5_055591_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c1s5_055616_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c2s2_142202_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c2s2_142277_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c2s3_023082_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c2s3_023082_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c2s3_023107_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c2s3_023257_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c3s2_144894_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c3s2_144919_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c3s3_029778_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c3s3_029853_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c5s3_029815_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c5s3_029890_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c6s3_053542_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1092_c6s3_053567_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c1s5_020336_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c1s5_020361_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c1s5_024686_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c1s5_024736_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c3s2_155844_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c3s2_156019_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c3s2_156019_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c3s2_160069_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c3s2_160094_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c5s2_156474_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c5s2_160649_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c6s3_017892_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c6s3_017917_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c6s3_017942_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c6s3_021817_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c6s3_021842_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1125_c6s3_021892_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c1s5_022436_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c1s5_022486_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c1s5_030386_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c2s2_162777_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c2s2_162777_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c2s2_162802_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c3s2_158069_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c3s2_158094_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c3s2_158169_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c3s3_003762_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c3s3_003787_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c5s2_158349_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c5s2_158449_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c5s2_158499_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c5s2_158499_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c5s2_158524_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c5s2_158599_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c6s3_019792_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c6s3_019892_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c6s3_019917_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c6s3_019917_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1133_c6s3_020117_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c3s2_161419_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c3s2_161469_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c4s5_026104_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c4s5_026129_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c5s3_000343_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c5s3_000368_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c6s3_023267_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c6s3_023342_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1145_c6s3_023392_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c1s5_044266_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c2s2_160377_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c2s2_160402_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c2s2_160452_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c2s2_160502_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c2s3_011782_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c2s3_011857_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c3s3_001962_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c3s3_017528_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c3s3_017603_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c6s3_025667_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c6s3_025717_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c6s3_041142_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c6s3_041167_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1161_c6s3_041217_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c2s3_006382_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c2s3_006407_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c3s3_012178_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c3s3_012203_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c3s3_012228_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c6s3_035817_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1202_c6s3_035867_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c1s5_050116_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c1s5_050166_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c2s3_006732_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c2s3_006807_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c2s3_017732_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c3s3_013053_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c3s3_013078_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c3s3_023553_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c3s3_023603_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c5s3_024140_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c6s3_036792_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c6s3_036817_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c6s3_047142_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c6s3_047142_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1211_c6s3_047217_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c1s5_040516_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c3s3_013753_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c3s3_013778_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c3s3_013853_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c3s3_013878_09.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c5s3_014440_10.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1223_c6s3_037367_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c1s5_047166_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c1s5_047191_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c1s5_047216_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c1s5_059091_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c1s5_059116_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c3s3_020903_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c3s3_021028_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c3s3_032628_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c3s3_032653_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c5s3_021340_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c5s3_021440_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c5s3_021490_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c5s3_033340_12.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c5s3_033365_11.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_044517_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_044542_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_044592_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_044642_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_044742_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_056242_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_056317_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1256_c6s3_056392_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c1s5_051991_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c1s5_059366_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c1s5_059516_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c2s3_019482_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c2s3_019507_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c2s3_019632_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c2s3_027082_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c2s3_027157_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c3s3_025903_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c3s3_025928_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c3s3_032728_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c3s3_032728_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c3s3_032753_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c5s3_026140_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c5s3_033390_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c6s3_049617_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c6s3_049642_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c6s3_056392_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1274_c6s3_056492_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c1s5_056191_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c2s3_023657_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c2s3_023657_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c2s3_023732_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c2s3_023732_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c3s3_030028_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c3s3_030053_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c5s3_030315_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1293_c6s3_053742_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c1s5_060766_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c1s5_060816_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c1s5_064966_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c1s6_006716_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c1s6_006741_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c1s6_006916_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c2s3_032457_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c2s3_032482_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c2s3_032507_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c2s3_049107_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_034653_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_034678_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_034703_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_034753_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_038353_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_038403_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_055503_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_055528_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c3s3_055578_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s5_060460_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s5_060560_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s5_060635_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s6_007085_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s6_007110_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s6_007160_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c4s6_007235_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c5s3_035215_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c5s3_039165_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c5s3_056090_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c5s3_056190_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c5s3_056265_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c6s3_058342_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c6s3_058392_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c6s3_058492_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c6s3_058517_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c6s3_061967_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1317_c6s3_061992_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c1s5_063266_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c1s5_063291_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c1s5_063391_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c2s3_030932_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c2s3_030957_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c3s3_036753_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c3s3_036778_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c4s5_062485_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c5s3_037115_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1329_c5s3_037165_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c1s6_014846_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c1s6_014871_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c1s6_014871_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c2s3_037357_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c2s3_057477_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c2s3_057627_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c2s3_058052_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c3s3_043828_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c3s3_043878_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c3s3_063244_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c3s3_063269_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c3s3_064619_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c4s6_014066_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c4s6_014166_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c4s6_014216_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c4s6_014216_07.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c5s3_063637_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c5s3_063637_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c5s3_063712_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c5s3_063712_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_067567_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_067592_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_067592_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_086867_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_088292_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_088342_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_088392_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_088417_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1369_c6s3_088417_06.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c1s6_004641_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c1s6_004716_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c1s6_016646_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c1s6_016671_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c3s3_053303_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c3s3_053453_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c3s3_053503_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c3s3_065144_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c3s3_065169_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c5s3_053840_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c5s3_065737_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_077117_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_077192_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_077192_05.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_077217_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_088692_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_088767_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1424_c6s3_088767_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c1s6_009441_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c2s3_051857_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c2s3_051982_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c3s3_058303_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c3s3_058328_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c5s3_058515_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c6s3_082067_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1457_c6s3_082092_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c1s6_023021_02.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c1s6_023071_05.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c2s3_065527_02.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c2s3_065552_02.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c3s3_071344_02.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c3s3_071369_01.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c3s3_071419_03.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c4s6_022241_02.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c4s6_022291_05.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c4s6_022316_08.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c5s3_071737_01.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c5s3_071762_01.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1488_c5s3_071862_01.jpg.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c1s6_013621_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c1s6_013646_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c1s6_013721_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c1s6_016371_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c1s6_016471_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c3s3_062353_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c3s3_062353_09.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c3s3_062378_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c3s3_064844_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c3s3_064869_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c3s3_064869_08.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c5s3_065587_03.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c5s3_065587_09.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_085942_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_085967_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_086017_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_086017_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_086217_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_086242_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_088492_01.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_088492_04.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_088642_02.jpg"
        string_val: "./downloads/datasets/market1501/bounding_box_test/1499_c6s3_088642_04.jpg"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1341
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1341
          }
        }
        tensor_contentf\000\000\000f\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000m\000\000\000mt\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\t\001\000\000\ta\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000a\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000c\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}\001\000\000}b\003\000\000b\003\000\000b\003\000\000b\003\000\000b\003\000\000b\003\000\000b\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000t\003\000\000te\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000e\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000m\004\000\000y\004\000\000y\004\000\000y\004\000\000y\004\000\000y\004\000\000y\004\000\000y\004\000\000y\004\000\000y\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\211\004\000\000\262\004\000\000\262\004\000\000\262\004\000\000\262\004\000\000\262\004\000\000\262\004\000\000\262\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\273\004\000\000\307\004\000\000\307\004\000\000\307\004\000\000\307\004\000\000\307\004\000\000\307\004\000\000\307\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\350\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\372\004\000\000\r\005\000\000\r\005\000\000\r\005\000\000\r\005\000\000\r\005\000\000\r\005\000\000\r\005\000\000\r\005\000\000\r
      }
    }
  }
}
node {
  name: "fifo_queue_DequeueMany/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fifo_queue_DequeueMany"
  op: "QueueDequeueManyV2"
  input: "fifo_queue"
  input: "fifo_queue_DequeueMany/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "fifo_queue_DequeueMany"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "fifo_queue_DequeueMany:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2"
  op: "GatherV2"
  input: "Const"
  input: "Squeeze"
  input: "GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "map/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArray"
  op: "TensorArrayV3"
  input: "map/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map/TensorArrayUnstack/Shape"
  input: "map/TensorArrayUnstack/strided_slice/stack"
  input: "map/TensorArrayUnstack/strided_slice/stack_1"
  input: "map/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/range"
  op: "Range"
  input: "map/TensorArrayUnstack/range/start"
  input: "map/TensorArrayUnstack/strided_slice"
  input: "map/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map/TensorArray"
  input: "map/TensorArrayUnstack/range"
  input: "GatherV2"
  input: "map/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@GatherV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArray_1"
  op: "TensorArrayV3"
  input: "map/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while/Enter"
  op: "Enter"
  input: "map/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_1"
  op: "Enter"
  input: "map/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Enter_2"
  op: "Enter"
  input: "map/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Merge"
  op: "Merge"
  input: "map/while/Enter"
  input: "map/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Merge_1"
  op: "Merge"
  input: "map/while/Enter_1"
  input: "map/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Merge_2"
  op: "Merge"
  input: "map/while/Enter_2"
  input: "map/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Less"
  op: "Less"
  input: "map/while/Merge"
  input: "map/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Less/Enter"
  op: "Enter"
  input: "map/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Less_1/y"
  op: "Const"
  input: "^map/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/while/Less_1"
  op: "Less"
  input: "map/while/Merge_1"
  input: "map/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map/while/Less"
  input: "map/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/LoopCond"
  op: "LoopCond"
  input: "map/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch"
  op: "Switch"
  input: "map/while/Merge"
  input: "map/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch_1"
  op: "Switch"
  input: "map/while/Merge_1"
  input: "map/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Switch_2"
  op: "Switch"
  input: "map/while/Merge_2"
  input: "map/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity"
  op: "Identity"
  input: "map/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_1"
  op: "Identity"
  input: "map/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_2"
  op: "Identity"
  input: "map/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/add/y"
  op: "Const"
  input: "^map/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add"
  op: "AddV2"
  input: "map/while/Identity"
  input: "map/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map/while/TensorArrayReadV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/ReadFile"
  op: "ReadFile"
  input: "map/while/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/DecodeJpeg"
  op: "DecodeJpeg"
  input: "map/while/ReadFile"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map/while/Identity_1"
  input: "map/while/DecodeJpeg"
  input: "map/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/add_1/y"
  op: "Const"
  input: "^map/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/while/add_1"
  op: "AddV2"
  input: "map/while/Identity_1"
  input: "map/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration"
  op: "NextIteration"
  input: "map/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration_1"
  op: "NextIteration"
  input: "map/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/NextIteration_2"
  op: "NextIteration"
  input: "map/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit"
  op: "Exit"
  input: "map/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit_1"
  op: "Exit"
  input: "map/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Exit_2"
  op: "Exit"
  input: "map/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/range"
  op: "Range"
  input: "map/TensorArrayStack/range/start"
  input: "map/TensorArrayStack/Const"
  input: "map/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map/TensorArray_1"
  input: "map/TensorArrayStack/range"
  input: "map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "resize/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resize/ResizeBilinear"
  op: "ResizeBilinear"
  input: "map/TensorArrayStack/TensorArrayGatherV3"
  input: "resize/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "map_1/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/TensorArray"
  op: "TensorArrayV3"
  input: "map_1/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "K\000\000\000\200\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map_1/TensorArrayUnstack/Shape"
  input: "map_1/TensorArrayUnstack/strided_slice/stack"
  input: "map_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "map_1/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/range"
  op: "Range"
  input: "map_1/TensorArrayUnstack/range/start"
  input: "map_1/TensorArrayUnstack/strided_slice"
  input: "map_1/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map_1/TensorArray"
  input: "map_1/TensorArrayUnstack/range"
  input: "resize/ResizeBilinear"
  input: "map_1/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize/ResizeBilinear"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "map_1/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_1/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/while/Enter"
  op: "Enter"
  input: "map_1/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Enter_1"
  op: "Enter"
  input: "map_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Enter_2"
  op: "Enter"
  input: "map_1/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Merge"
  op: "Merge"
  input: "map_1/while/Enter"
  input: "map_1/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Merge_1"
  op: "Merge"
  input: "map_1/while/Enter_1"
  input: "map_1/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Merge_2"
  op: "Merge"
  input: "map_1/while/Enter_2"
  input: "map_1/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Less"
  op: "Less"
  input: "map_1/while/Merge"
  input: "map_1/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Less/Enter"
  op: "Enter"
  input: "map_1/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Less_1/y"
  op: "Const"
  input: "^map_1/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/while/Less_1"
  op: "Less"
  input: "map_1/while/Merge_1"
  input: "map_1/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map_1/while/Less"
  input: "map_1/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/LoopCond"
  op: "LoopCond"
  input: "map_1/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Switch"
  op: "Switch"
  input: "map_1/while/Merge"
  input: "map_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Switch_1"
  op: "Switch"
  input: "map_1/while/Merge_1"
  input: "map_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Switch_2"
  op: "Switch"
  input: "map_1/while/Merge_2"
  input: "map_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity"
  op: "Identity"
  input: "map_1/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_1"
  op: "Identity"
  input: "map_1/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_2"
  op: "Identity"
  input: "map_1/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/add/y"
  op: "Const"
  input: "^map_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/while/add"
  op: "AddV2"
  input: "map_1/while/Identity"
  input: "map_1/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map_1/while/TensorArrayReadV3/Enter"
  input: "map_1/while/Identity_1"
  input: "map_1/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map_1/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/truediv/y"
  op: "Const"
  input: "^map_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "map_1/while/truediv"
  op: "RealDiv"
  input: "map_1/while/TensorArrayReadV3"
  input: "map_1/while/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map_1/while/Identity_1"
  input: "map_1/while/truediv"
  input: "map_1/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map_1/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/add_1/y"
  op: "Const"
  input: "^map_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/while/add_1"
  op: "AddV2"
  input: "map_1/while/Identity_1"
  input: "map_1/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/NextIteration"
  op: "NextIteration"
  input: "map_1/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/NextIteration_1"
  op: "NextIteration"
  input: "map_1/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/NextIteration_2"
  op: "NextIteration"
  input: "map_1/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Exit"
  op: "Exit"
  input: "map_1/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Exit_1"
  op: "Exit"
  input: "map_1/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Exit_2"
  op: "Exit"
  input: "map_1/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/range"
  op: "Range"
  input: "map_1/TensorArrayStack/range/start"
  input: "map_1/TensorArrayStack/Const"
  input: "map_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map_1/TensorArray_1"
  input: "map_1/TensorArrayStack/range"
  input: "map_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_1"
  op: "GatherV2"
  input: "Const_1"
  input: "Squeeze"
  input: "GatherV2_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "GatherV2_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_2"
  op: "GatherV2"
  input: "Const"
  input: "Squeeze_1"
  input: "GatherV2_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "map_2/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArray"
  op: "TensorArrayV3"
  input: "map_2/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map_2/TensorArrayUnstack/Shape"
  input: "map_2/TensorArrayUnstack/strided_slice/stack"
  input: "map_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "map_2/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/range"
  op: "Range"
  input: "map_2/TensorArrayUnstack/range/start"
  input: "map_2/TensorArrayUnstack/strided_slice"
  input: "map_2/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map_2/TensorArray"
  input: "map_2/TensorArrayUnstack/range"
  input: "GatherV2_2"
  input: "map_2/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@GatherV2_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "map_2/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_2/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/while/Enter"
  op: "Enter"
  input: "map_2/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Enter_1"
  op: "Enter"
  input: "map_2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Enter_2"
  op: "Enter"
  input: "map_2/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Merge"
  op: "Merge"
  input: "map_2/while/Enter"
  input: "map_2/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Merge_1"
  op: "Merge"
  input: "map_2/while/Enter_1"
  input: "map_2/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Merge_2"
  op: "Merge"
  input: "map_2/while/Enter_2"
  input: "map_2/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Less"
  op: "Less"
  input: "map_2/while/Merge"
  input: "map_2/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Less/Enter"
  op: "Enter"
  input: "map_2/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/Less_1/y"
  op: "Const"
  input: "^map_2/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/while/Less_1"
  op: "Less"
  input: "map_2/while/Merge_1"
  input: "map_2/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map_2/while/Less"
  input: "map_2/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/LoopCond"
  op: "LoopCond"
  input: "map_2/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Switch"
  op: "Switch"
  input: "map_2/while/Merge"
  input: "map_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Switch_1"
  op: "Switch"
  input: "map_2/while/Merge_1"
  input: "map_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Switch_2"
  op: "Switch"
  input: "map_2/while/Merge_2"
  input: "map_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Identity"
  op: "Identity"
  input: "map_2/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Identity_1"
  op: "Identity"
  input: "map_2/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Identity_2"
  op: "Identity"
  input: "map_2/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/add/y"
  op: "Const"
  input: "^map_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/while/add"
  op: "AddV2"
  input: "map_2/while/Identity"
  input: "map_2/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map_2/while/TensorArrayReadV3/Enter"
  input: "map_2/while/Identity_1"
  input: "map_2/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "map_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map_2/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/ReadFile"
  op: "ReadFile"
  input: "map_2/while/TensorArrayReadV3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/DecodeJpeg"
  op: "DecodeJpeg"
  input: "map_2/while/ReadFile"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "map_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map_2/while/Identity_1"
  input: "map_2/while/DecodeJpeg"
  input: "map_2/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map_2/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/while/DecodeJpeg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_2/while/add_1/y"
  op: "Const"
  input: "^map_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/while/add_1"
  op: "AddV2"
  input: "map_2/while/Identity_1"
  input: "map_2/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/NextIteration"
  op: "NextIteration"
  input: "map_2/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/NextIteration_1"
  op: "NextIteration"
  input: "map_2/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/NextIteration_2"
  op: "NextIteration"
  input: "map_2/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Exit"
  op: "Exit"
  input: "map_2/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Exit_1"
  op: "Exit"
  input: "map_2/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/while/Exit_2"
  op: "Exit"
  input: "map_2/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/range"
  op: "Range"
  input: "map_2/TensorArrayStack/range/start"
  input: "map_2/TensorArrayStack/Const"
  input: "map_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map_2/TensorArray_1"
  input: "map_2/TensorArrayStack/range"
  input: "map_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "resize_1/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resize_1/ResizeBilinear"
  op: "ResizeBilinear"
  input: "map_2/TensorArrayStack/TensorArrayGatherV3"
  input: "resize_1/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "map_3/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/TensorArray"
  op: "TensorArrayV3"
  input: "map_3/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "K\000\000\000\200\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "map_3/TensorArrayUnstack/Shape"
  input: "map_3/TensorArrayUnstack/strided_slice/stack"
  input: "map_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "map_3/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/range"
  op: "Range"
  input: "map_3/TensorArrayUnstack/range/start"
  input: "map_3/TensorArrayUnstack/strided_slice"
  input: "map_3/TensorArrayUnstack/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "map_3/TensorArray"
  input: "map_3/TensorArrayUnstack/range"
  input: "resize_1/ResizeBilinear"
  input: "map_3/TensorArray:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resize_1/ResizeBilinear"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "map_3/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "map_3/while/maximum_iterations"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/while/Enter"
  op: "Enter"
  input: "map_3/while/iteration_counter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Enter_1"
  op: "Enter"
  input: "map_3/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Enter_2"
  op: "Enter"
  input: "map_3/TensorArray_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Merge"
  op: "Merge"
  input: "map_3/while/Enter"
  input: "map_3/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Merge_1"
  op: "Merge"
  input: "map_3/while/Enter_1"
  input: "map_3/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Merge_2"
  op: "Merge"
  input: "map_3/while/Enter_2"
  input: "map_3/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Less"
  op: "Less"
  input: "map_3/while/Merge"
  input: "map_3/while/Less/Enter"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Less/Enter"
  op: "Enter"
  input: "map_3/while/maximum_iterations"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/Less_1/y"
  op: "Const"
  input: "^map_3/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/while/Less_1"
  op: "Less"
  input: "map_3/while/Merge_1"
  input: "map_3/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "map_3/while/Less"
  input: "map_3/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/LoopCond"
  op: "LoopCond"
  input: "map_3/while/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Switch"
  op: "Switch"
  input: "map_3/while/Merge"
  input: "map_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Switch_1"
  op: "Switch"
  input: "map_3/while/Merge_1"
  input: "map_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Switch_2"
  op: "Switch"
  input: "map_3/while/Merge_2"
  input: "map_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Identity"
  op: "Identity"
  input: "map_3/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Identity_1"
  op: "Identity"
  input: "map_3/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Identity_2"
  op: "Identity"
  input: "map_3/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/add/y"
  op: "Const"
  input: "^map_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/while/add"
  op: "AddV2"
  input: "map_3/while/Identity"
  input: "map_3/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "map_3/while/TensorArrayReadV3/Enter"
  input: "map_3/while/Identity_1"
  input: "map_3/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "map_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "map_3/TensorArray"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "map_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/truediv/y"
  op: "Const"
  input: "^map_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "map_3/while/truediv"
  op: "RealDiv"
  input: "map_3/while/TensorArrayReadV3"
  input: "map_3/while/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "map_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "map_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "map_3/while/Identity_1"
  input: "map_3/while/truediv"
  input: "map_3/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "map_3/TensorArray_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/while/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "map_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_3/while/add_1/y"
  op: "Const"
  input: "^map_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/while/add_1"
  op: "AddV2"
  input: "map_3/while/Identity_1"
  input: "map_3/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/NextIteration"
  op: "NextIteration"
  input: "map_3/while/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/NextIteration_1"
  op: "NextIteration"
  input: "map_3/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/NextIteration_2"
  op: "NextIteration"
  input: "map_3/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Exit"
  op: "Exit"
  input: "map_3/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Exit_1"
  op: "Exit"
  input: "map_3/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/while/Exit_2"
  op: "Exit"
  input: "map_3/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/range"
  op: "Range"
  input: "map_3/TensorArrayStack/range/start"
  input: "map_3/TensorArrayStack/Const"
  input: "map_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "map_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "map_3/TensorArray_1"
  input: "map_3/TensorArrayStack/range"
  input: "map_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@map_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "GatherV2_3/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_3"
  op: "GatherV2"
  input: "Const_1"
  input: "Squeeze_1"
  input: "GatherV2_3/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "map_1/TensorArrayStack/TensorArrayGatherV3"
  input: "map_3/TensorArrayStack/TensorArrayGatherV3"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1_1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv1_1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv1_1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv1_1/weights/Initializer/truncated_normal/mul"
  input: "conv1_1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/weights/Assign"
  op: "Assign"
  input: "conv1_1/weights"
  input: "conv1_1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/weights/read"
  op: "Identity"
  input: "conv1_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv1_1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_1/Conv2D"
  op: "Conv2D"
  input: "concat"
  input: "conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta/Assign"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/beta"
  input: "conv1_1/conv1_1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/beta/read"
  op: "Identity"
  input: "conv1_1/conv1_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_mean"
  input: "conv1_1/conv1_1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv1_1/conv1_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_variance"
  input: "conv1_1/conv1_1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv1_1/conv1_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_1/conv1_1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv1_1/Conv2D"
  input: "conv1_1/conv1_1/bn/Const"
  input: "conv1_1/conv1_1/bn/beta/read"
  input: "conv1_1/conv1_1/bn/moving_mean/read"
  input: "conv1_1/conv1_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_1/Elu"
  op: "Elu"
  input: "conv1_1/conv1_1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv1_2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv1_2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv1_2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv1_2/weights/Initializer/truncated_normal/mul"
  input: "conv1_2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/weights/Assign"
  op: "Assign"
  input: "conv1_2/weights"
  input: "conv1_2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/weights/read"
  op: "Identity"
  input: "conv1_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv1_2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1_2/Conv2D"
  op: "Conv2D"
  input: "conv1_1/Elu"
  input: "conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta/Assign"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/beta"
  input: "conv1_2/conv1_2/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/beta/read"
  op: "Identity"
  input: "conv1_2/conv1_2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_mean"
  input: "conv1_2/conv1_2/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv1_2/conv1_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_variance"
  input: "conv1_2/conv1_2/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv1_2/conv1_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_2/conv1_2/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv1_2/Conv2D"
  input: "conv1_2/conv1_2/bn/Const"
  input: "conv1_2/conv1_2/bn/beta/read"
  input: "conv1_2/conv1_2/bn/moving_mean/read"
  input: "conv1_2/conv1_2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_2/Elu"
  op: "Elu"
  input: "conv1_2/conv1_2/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "pool1/MaxPool"
  op: "MaxPool"
  input: "conv1_2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_1/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_1/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv2_1/1/weights/Initializer/truncated_normal/mul"
  input: "conv2_1/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/weights/Assign"
  op: "Assign"
  input: "conv2_1/1/weights"
  input: "conv2_1/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/weights/read"
  op: "Identity"
  input: "conv2_1/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_1/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/Conv2D"
  op: "Conv2D"
  input: "pool1/MaxPool"
  input: "conv2_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta/Assign"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  input: "conv2_1/1/conv2_1/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/beta/read"
  op: "Identity"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_1/1/conv2_1/1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv2_1/1/Conv2D"
  input: "conv2_1/1/conv2_1/1/bn/Const"
  input: "conv2_1/1/conv2_1/1/bn/beta/read"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean/read"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv2_1/1/Elu"
  op: "Elu"
  input: "conv2_1/1/conv2_1/1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Dropout/Identity"
  op: "Identity"
  input: "conv2_1/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_1/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_1/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv2_1/2/weights/Initializer/truncated_normal/mul"
  input: "conv2_1/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/2/weights/Assign"
  op: "Assign"
  input: "conv2_1/2/weights"
  input: "conv2_1/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/2/weights/read"
  op: "Identity"
  input: "conv2_1/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_1/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_1/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/2/biases/Assign"
  op: "Assign"
  input: "conv2_1/2/biases"
  input: "conv2_1/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/2/biases/read"
  op: "Identity"
  input: "conv2_1/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_1/2/Conv2D"
  op: "Conv2D"
  input: "Dropout/Identity"
  input: "conv2_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/2/BiasAdd"
  op: "BiasAdd"
  input: "conv2_1/2/Conv2D"
  input: "conv2_1/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "pool1/MaxPool"
  input: "conv2_1/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/bn/beta/Assign"
  op: "Assign"
  input: "conv2_3/bn/beta"
  input: "conv2_3/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/bn/beta/read"
  op: "Identity"
  input: "conv2_3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2_3/bn/moving_mean"
  input: "conv2_3/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/bn/moving_mean/read"
  op: "Identity"
  input: "conv2_3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2_3/bn/moving_variance"
  input: "conv2_3/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/bn/moving_variance/read"
  op: "Identity"
  input: "conv2_3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "add"
  input: "conv2_3/bn/Const"
  input: "conv2_3/bn/beta/read"
  input: "conv2_3/bn/moving_mean/read"
  input: "conv2_3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Elu"
  op: "Elu"
  input: "conv2_3/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_3/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_3/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv2_3/1/weights/Initializer/truncated_normal/mul"
  input: "conv2_3/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/weights/Assign"
  op: "Assign"
  input: "conv2_3/1/weights"
  input: "conv2_3/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/weights/read"
  op: "Identity"
  input: "conv2_3/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_3/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/Conv2D"
  op: "Conv2D"
  input: "Elu"
  input: "conv2_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta/Assign"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  input: "conv2_3/1/conv2_3/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/beta/read"
  op: "Identity"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2_3/1/conv2_3/1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv2_3/1/Conv2D"
  input: "conv2_3/1/conv2_3/1/bn/Const"
  input: "conv2_3/1/conv2_3/1/bn/beta/read"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean/read"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv2_3/1/Elu"
  op: "Elu"
  input: "conv2_3/1/conv2_3/1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_1/Identity"
  op: "Identity"
  input: "conv2_3/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2_3/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2_3/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv2_3/2/weights/Initializer/truncated_normal/mul"
  input: "conv2_3/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/2/weights/Assign"
  op: "Assign"
  input: "conv2_3/2/weights"
  input: "conv2_3/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/2/weights/read"
  op: "Identity"
  input: "conv2_3/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv2_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv2_3/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv2_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2_3/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_3/2/biases/Assign"
  op: "Assign"
  input: "conv2_3/2/biases"
  input: "conv2_3/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/2/biases/read"
  op: "Identity"
  input: "conv2_3/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2_3/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_1/Identity"
  input: "conv2_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_3/2/BiasAdd"
  op: "BiasAdd"
  input: "conv2_3/2/Conv2D"
  input: "conv2_3/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "add"
  input: "conv2_3/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/bn/beta/Assign"
  op: "Assign"
  input: "conv3_1/bn/beta"
  input: "conv3_1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/bn/beta/read"
  op: "Identity"
  input: "conv3_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_1/bn/moving_mean"
  input: "conv3_1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_1/bn/moving_variance"
  input: "conv3_1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "add_1"
  input: "conv3_1/bn/Const"
  input: "conv3_1/bn/beta/read"
  input: "conv3_1/bn/moving_mean/read"
  input: "conv3_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Elu_1"
  op: "Elu"
  input: "conv3_1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_1/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_1/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv3_1/1/weights/Initializer/truncated_normal/mul"
  input: "conv3_1/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/weights/Assign"
  op: "Assign"
  input: "conv3_1/1/weights"
  input: "conv3_1/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/weights/read"
  op: "Identity"
  input: "conv3_1/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_1/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/Conv2D"
  op: "Conv2D"
  input: "Elu_1"
  input: "conv3_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta/Assign"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  input: "conv3_1/1/conv3_1/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/beta/read"
  op: "Identity"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_1/1/conv3_1/1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv3_1/1/Conv2D"
  input: "conv3_1/1/conv3_1/1/bn/Const"
  input: "conv3_1/1/conv3_1/1/bn/beta/read"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean/read"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv3_1/1/Elu"
  op: "Elu"
  input: "conv3_1/1/conv3_1/1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_2/Identity"
  op: "Identity"
  input: "conv3_1/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_1/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_1/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv3_1/2/weights/Initializer/truncated_normal/mul"
  input: "conv3_1/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/2/weights/Assign"
  op: "Assign"
  input: "conv3_1/2/weights"
  input: "conv3_1/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/2/weights/read"
  op: "Identity"
  input: "conv3_1/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_1/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/2/biases/Assign"
  op: "Assign"
  input: "conv3_1/2/biases"
  input: "conv3_1/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/2/biases/read"
  op: "Identity"
  input: "conv3_1/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_2/Identity"
  input: "conv3_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/2/BiasAdd"
  op: "BiasAdd"
  input: "conv3_1/2/Conv2D"
  input: "conv3_1/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/mul"
  input: "conv3_1/projection/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/projection/weights/Assign"
  op: "Assign"
  input: "conv3_1/projection/weights"
  input: "conv3_1/projection/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/projection/weights/read"
  op: "Identity"
  input: "conv3_1/projection/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_1/projection/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_1/projection/Conv2D"
  op: "Conv2D"
  input: "add_1"
  input: "conv3_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "conv3_1/projection/Conv2D"
  input: "conv3_1/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/bn/beta/Assign"
  op: "Assign"
  input: "conv3_3/bn/beta"
  input: "conv3_3/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/bn/beta/read"
  op: "Identity"
  input: "conv3_3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_3/bn/moving_mean"
  input: "conv3_3/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_3/bn/moving_variance"
  input: "conv3_3/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "add_2"
  input: "conv3_3/bn/Const"
  input: "conv3_3/bn/beta/read"
  input: "conv3_3/bn/moving_mean/read"
  input: "conv3_3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Elu_2"
  op: "Elu"
  input: "conv3_3/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_3/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_3/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv3_3/1/weights/Initializer/truncated_normal/mul"
  input: "conv3_3/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/weights/Assign"
  op: "Assign"
  input: "conv3_3/1/weights"
  input: "conv3_3/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/weights/read"
  op: "Identity"
  input: "conv3_3/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_3/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/Conv2D"
  op: "Conv2D"
  input: "Elu_2"
  input: "conv3_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta/Assign"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  input: "conv3_3/1/conv3_3/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/beta/read"
  op: "Identity"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3_3/1/conv3_3/1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv3_3/1/Conv2D"
  input: "conv3_3/1/conv3_3/1/bn/Const"
  input: "conv3_3/1/conv3_3/1/bn/beta/read"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean/read"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv3_3/1/Elu"
  op: "Elu"
  input: "conv3_3/1/conv3_3/1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_3/Identity"
  op: "Identity"
  input: "conv3_3/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv3_3/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv3_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv3_3/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv3_3/2/weights/Initializer/truncated_normal/mul"
  input: "conv3_3/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/2/weights/Assign"
  op: "Assign"
  input: "conv3_3/2/weights"
  input: "conv3_3/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/2/weights/read"
  op: "Identity"
  input: "conv3_3/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv3_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv3_3/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv3_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3_3/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_3/2/biases/Assign"
  op: "Assign"
  input: "conv3_3/2/biases"
  input: "conv3_3/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/2/biases/read"
  op: "Identity"
  input: "conv3_3/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv3_3/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_3/Identity"
  input: "conv3_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_3/2/BiasAdd"
  op: "BiasAdd"
  input: "conv3_3/2/Conv2D"
  input: "conv3_3/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "add_2"
  input: "conv3_3/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/bn/beta/Assign"
  op: "Assign"
  input: "conv4_1/bn/beta"
  input: "conv4_1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/bn/beta/read"
  op: "Identity"
  input: "conv4_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_1/bn/moving_mean"
  input: "conv4_1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_1/bn/moving_variance"
  input: "conv4_1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "add_3"
  input: "conv4_1/bn/Const"
  input: "conv4_1/bn/beta/read"
  input: "conv4_1/bn/moving_mean/read"
  input: "conv4_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Elu_3"
  op: "Elu"
  input: "conv4_1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_1/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_1/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_1/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv4_1/1/weights/Initializer/truncated_normal/mul"
  input: "conv4_1/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/weights/Assign"
  op: "Assign"
  input: "conv4_1/1/weights"
  input: "conv4_1/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/weights/read"
  op: "Identity"
  input: "conv4_1/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_1/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_1/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/Conv2D"
  op: "Conv2D"
  input: "Elu_3"
  input: "conv4_1/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta/Assign"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  input: "conv4_1/1/conv4_1/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/beta/read"
  op: "Identity"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_1/1/conv4_1/1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv4_1/1/Conv2D"
  input: "conv4_1/1/conv4_1/1/bn/Const"
  input: "conv4_1/1/conv4_1/1/bn/beta/read"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean/read"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv4_1/1/Elu"
  op: "Elu"
  input: "conv4_1/1/conv4_1/1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_4/Identity"
  op: "Identity"
  input: "conv4_1/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_1/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_1/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_1/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv4_1/2/weights/Initializer/truncated_normal/mul"
  input: "conv4_1/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/2/weights/Assign"
  op: "Assign"
  input: "conv4_1/2/weights"
  input: "conv4_1/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/2/weights/read"
  op: "Identity"
  input: "conv4_1/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_1/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_1/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/2/biases/Assign"
  op: "Assign"
  input: "conv4_1/2/biases"
  input: "conv4_1/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/2/biases/read"
  op: "Identity"
  input: "conv4_1/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_4/Identity"
  input: "conv4_1/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/2/BiasAdd"
  op: "BiasAdd"
  input: "conv4_1/2/Conv2D"
  input: "conv4_1/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/mul"
  input: "conv4_1/projection/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/projection/weights/Assign"
  op: "Assign"
  input: "conv4_1/projection/weights"
  input: "conv4_1/projection/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/projection/weights/read"
  op: "Identity"
  input: "conv4_1/projection/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_1/projection/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_1/projection/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_1/projection/Conv2D"
  op: "Conv2D"
  input: "add_3"
  input: "conv4_1/projection/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "conv4_1/projection/Conv2D"
  input: "conv4_1/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/bn/beta/Assign"
  op: "Assign"
  input: "conv4_3/bn/beta"
  input: "conv4_3/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/bn/beta/read"
  op: "Identity"
  input: "conv4_3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_3/bn/moving_mean"
  input: "conv4_3/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_3/bn/moving_variance"
  input: "conv4_3/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "add_4"
  input: "conv4_3/bn/Const"
  input: "conv4_3/bn/beta/read"
  input: "conv4_3/bn/moving_mean/read"
  input: "conv4_3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "Elu_4"
  op: "Elu"
  input: "conv4_3/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_3/1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_3/1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_3/1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv4_3/1/weights/Initializer/truncated_normal/mul"
  input: "conv4_3/1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/weights/Assign"
  op: "Assign"
  input: "conv4_3/1/weights"
  input: "conv4_3/1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/weights/read"
  op: "Identity"
  input: "conv4_3/1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_3/1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_3/1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/Conv2D"
  op: "Conv2D"
  input: "Elu_4"
  input: "conv4_3/1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta/Assign"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  input: "conv4_3/1/conv4_3/1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/beta/read"
  op: "Identity"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_mean/read"
  op: "Identity"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/moving_variance/read"
  op: "Identity"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4_3/1/conv4_3/1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "conv4_3/1/Conv2D"
  input: "conv4_3/1/conv4_3/1/bn/Const"
  input: "conv4_3/1/conv4_3/1/bn/beta/read"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean/read"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv4_3/1/Elu"
  op: "Elu"
  input: "conv4_3/1/conv4_3/1/bn/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_5/Identity"
  op: "Identity"
  input: "conv4_3/1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv4_3/2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv4_3/2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "conv4_3/2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "conv4_3/2/weights/Initializer/truncated_normal/mul"
  input: "conv4_3/2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/2/weights/Assign"
  op: "Assign"
  input: "conv4_3/2/weights"
  input: "conv4_3/2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/2/weights/read"
  op: "Identity"
  input: "conv4_3/2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "conv4_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv4_3/2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv4_3/2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4_3/2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_3/2/biases/Assign"
  op: "Assign"
  input: "conv4_3/2/biases"
  input: "conv4_3/2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/2/biases/read"
  op: "Identity"
  input: "conv4_3/2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv4_3/2/Conv2D"
  op: "Conv2D"
  input: "Dropout_5/Identity"
  input: "conv4_3/2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_3/2/BiasAdd"
  op: "BiasAdd"
  input: "conv4_3/2/Conv2D"
  input: "conv4_3/2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "add_4"
  input: "conv4_3/2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Flatten/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000@\000\000"
      }
    }
  }
}
node {
  name: "Flatten/flatten/Reshape"
  op: "Reshape"
  input: "add_5"
  input: "Flatten/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "Dropout_6/Identity"
  op: "Identity"
  input: "Flatten/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "fc1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "fc1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "fc1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "fc1/weights/Initializer/truncated_normal/mul"
  input: "fc1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/weights/Assign"
  op: "Assign"
  input: "fc1/weights"
  input: "fc1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/weights/read"
  op: "Identity"
  input: "fc1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "fc1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "fc1/kernel/Regularizer/l2_regularizer/scale"
  input: "fc1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc1/MatMul"
  op: "MatMul"
  input: "Dropout_6/Identity"
  input: "fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape"
  op: "Reshape"
  input: "fc1/MatMul"
  input: "fc1/fc1/bn/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/fc1/bn/beta/Assign"
  op: "Assign"
  input: "fc1/fc1/bn/beta"
  input: "fc1/fc1/bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/fc1/bn/beta/read"
  op: "Identity"
  input: "fc1/fc1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean/Assign"
  op: "Assign"
  input: "fc1/fc1/bn/moving_mean"
  input: "fc1/fc1/bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_mean/read"
  op: "Identity"
  input: "fc1/fc1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance/Assign"
  op: "Assign"
  input: "fc1/fc1/bn/moving_variance"
  input: "fc1/fc1/bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc1/fc1/bn/moving_variance/read"
  op: "Identity"
  input: "fc1/fc1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "fc1/fc1/bn/Reshape"
  input: "fc1/fc1/bn/Const"
  input: "fc1/fc1/bn/beta/read"
  input: "fc1/fc1/bn/moving_mean/read"
  input: "fc1/fc1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "fc1/fc1/bn/Reshape_1"
  op: "Reshape"
  input: "fc1/fc1/bn/FusedBatchNormV3"
  input: "fc1/fc1/bn/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fc1/Elu"
  op: "Elu"
  input: "fc1/fc1/bn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Square"
  op: "Square"
  input: "fc1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize/Sum"
  op: "Sum"
  input: "l2_normalize/Square"
  input: "l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize/Maximum"
  op: "Maximum"
  input: "l2_normalize/Sum"
  input: "l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize"
  op: "Mul"
  input: "fc1/Elu"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\336\005\000\000"
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "ball/mean_vectors/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "ball/mean_vectors/Initializer/truncated_normal/TruncatedNormal"
  input: "ball/mean_vectors/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "ball/mean_vectors/Initializer/truncated_normal"
  op: "AddV2"
  input: "ball/mean_vectors/Initializer/truncated_normal/mul"
  input: "ball/mean_vectors/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "ball/mean_vectors"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1502
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ball/mean_vectors/Assign"
  op: "Assign"
  input: "ball/mean_vectors"
  input: "ball/mean_vectors/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ball/mean_vectors/read"
  op: "Identity"
  input: "ball/mean_vectors"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "ball/scale/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ball/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ball/scale/Assign"
  op: "Assign"
  input: "ball/scale"
  input: "ball/scale/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ball/scale/read"
  op: "Identity"
  input: "ball/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ball/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_regularizer"
  op: "Mul"
  input: "l2_regularizer/scale"
  input: "l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ball/scale/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "ball/scale/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ball/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ball/scale/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ball/scale/Regularizer/l2_regularizer/scale"
  input: "ball/scale/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ball/Softplus"
  op: "Softplus"
  input: "ball/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1/Square"
  op: "Square"
  input: "ball/mean_vectors/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "l2_normalize_1/Sum"
  op: "Sum"
  input: "l2_normalize_1/Square"
  input: "l2_normalize_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_1/Maximum"
  op: "Maximum"
  input: "l2_normalize_1/Sum"
  input: "l2_normalize_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_1"
  op: "Mul"
  input: "ball/mean_vectors/read"
  input: "l2_normalize_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "l2_normalize"
  input: "l2_normalize_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ball/Softplus"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "K\000\000\000\200\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Slice/size/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Slice/size"
  op: "Pack"
  input: "strided_slice"
  input: "Slice/size/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "l2_normalize"
  input: "Slice/begin"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Slice_1/begin/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "strided_slice"
  input: "Slice_1/begin/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "l2_normalize"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "Reshape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Cast"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum"
  op: "Minimum"
  input: "Cast_1"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_2/Sum"
  op: "Sum"
  input: "l2_normalize_2/Square"
  input: "l2_normalize_2/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_2/Maximum"
  op: "Maximum"
  input: "l2_normalize_2/Sum"
  input: "l2_normalize_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_2"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_2/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_3/Sum"
  op: "Sum"
  input: "l2_normalize_3/Square"
  input: "l2_normalize_3/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_3/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_3/Maximum"
  op: "Maximum"
  input: "l2_normalize_3/Sum"
  input: "l2_normalize_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_3"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_3/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "l2_normalize_3"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "l2_normalize_2"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "Const_2"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp"
  op: "Exp"
  input: "Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TopKV2"
  op: "TopKV2"
  input: "Exp"
  input: "TopKV2/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_4"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2:1"
  input: "GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_1"
  op: "Equal"
  input: "GatherV2_4"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "Equal_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "Cast_2"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Sum_1"
  input: "Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean/total/Assign"
  op: "Assign"
  input: "mean/total"
  input: "mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean/total/read"
  op: "Identity"
  input: "mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean/count/Assign"
  op: "Assign"
  input: "mean/count"
  input: "mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean/count/read"
  op: "Identity"
  input: "mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean/Cast"
  op: "Cast"
  input: "mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean/Sum"
  op: "Sum"
  input: "truediv"
  input: "mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean/AssignAdd"
  op: "AssignAdd"
  input: "mean/total"
  input: "mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean/AssignAdd_1"
  op: "AssignAdd"
  input: "mean/count"
  input: "mean/Cast"
  input: "^truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/Maximum"
  op: "Maximum"
  input: "mean/count/read"
  input: "mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/value"
  op: "DivNoNan"
  input: "mean/total/read"
  input: "mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/Maximum_1"
  op: "Maximum"
  input: "mean/AssignAdd_1"
  input: "mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/update_op"
  op: "DivNoNan"
  input: "mean/AssignAdd"
  input: "mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal_2"
  op: "Equal"
  input: "Reshape_3"
  input: "Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_3"
  op: "Cast"
  input: "Equal_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "Cast_4"
  op: "Cast"
  input: "Cast_4/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "Cast_3"
  input: "Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum_1"
  op: "Minimum"
  input: "Cast_4"
  input: "Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_4/Sum"
  op: "Sum"
  input: "l2_normalize_4/Square"
  input: "l2_normalize_4/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_4/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_4/Maximum"
  op: "Maximum"
  input: "l2_normalize_4/Sum"
  input: "l2_normalize_4/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_4/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_4"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_4/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_5/Sum"
  op: "Sum"
  input: "l2_normalize_5/Square"
  input: "l2_normalize_5/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_5/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_5/Maximum"
  op: "Maximum"
  input: "l2_normalize_5/Sum"
  input: "l2_normalize_5/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_5/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_5"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_5/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "l2_normalize_5"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_2"
  op: "MatMul"
  input: "l2_normalize_4"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "Const_3"
  input: "MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg_1"
  op: "Neg"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp_1"
  op: "Exp"
  input: "Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2_1/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "TopKV2_1"
  op: "TopKV2"
  input: "Exp_1"
  input: "TopKV2_1/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_5"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2_1:1"
  input: "GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_3"
  op: "Equal"
  input: "GatherV2_5"
  input: "Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_5"
  op: "Cast"
  input: "Equal_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "Cast_5"
  input: "Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "Sum_3"
  input: "Minimum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_1/total/Assign"
  op: "Assign"
  input: "mean_1/total"
  input: "mean_1/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_1/total/read"
  op: "Identity"
  input: "mean_1/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_1/count/Assign"
  op: "Assign"
  input: "mean_1/count"
  input: "mean_1/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_1/count/read"
  op: "Identity"
  input: "mean_1/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean_1/Cast"
  op: "Cast"
  input: "mean_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_1/Sum"
  op: "Sum"
  input: "truediv_1"
  input: "mean_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/AssignAdd"
  op: "AssignAdd"
  input: "mean_1/total"
  input: "mean_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/AssignAdd_1"
  op: "AssignAdd"
  input: "mean_1/count"
  input: "mean_1/Cast"
  input: "^truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/Maximum"
  op: "Maximum"
  input: "mean_1/count/read"
  input: "mean_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/value"
  op: "DivNoNan"
  input: "mean_1/total/read"
  input: "mean_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/Maximum_1"
  op: "Maximum"
  input: "mean_1/AssignAdd_1"
  input: "mean_1/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/update_op"
  op: "DivNoNan"
  input: "mean_1/AssignAdd"
  input: "mean_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_6"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_7"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal_4"
  op: "Equal"
  input: "Reshape_6"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_6"
  op: "Cast"
  input: "Equal_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "Cast_7"
  op: "Cast"
  input: "Cast_7/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum_4/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_4"
  op: "Sum"
  input: "Cast_6"
  input: "Sum_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum_2"
  op: "Minimum"
  input: "Cast_7"
  input: "Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_6/Sum"
  op: "Sum"
  input: "l2_normalize_6/Square"
  input: "l2_normalize_6/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_6/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_6/Maximum"
  op: "Maximum"
  input: "l2_normalize_6/Sum"
  input: "l2_normalize_6/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_6/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_6"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_6/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_7/Sum"
  op: "Sum"
  input: "l2_normalize_7/Square"
  input: "l2_normalize_7/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_7/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_7/Maximum"
  op: "Maximum"
  input: "l2_normalize_7/Sum"
  input: "l2_normalize_7/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_7/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_7"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_7/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_2"
  op: "Transpose"
  input: "l2_normalize_7"
  input: "transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_3"
  op: "MatMul"
  input: "l2_normalize_6"
  input: "transpose_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "Const_4"
  input: "MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg_2"
  op: "Neg"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp_2"
  op: "Exp"
  input: "Neg_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2_2/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "TopKV2_2"
  op: "TopKV2"
  input: "Exp_2"
  input: "TopKV2_2/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_6"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2_2:1"
  input: "GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_8"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_5"
  op: "Equal"
  input: "GatherV2_6"
  input: "Reshape_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_8"
  op: "Cast"
  input: "Equal_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Sum_5/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_5"
  op: "Sum"
  input: "Cast_8"
  input: "Sum_5/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "Sum_5"
  input: "Minimum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean_2/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_2/total/Assign"
  op: "Assign"
  input: "mean_2/total"
  input: "mean_2/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_2/total/read"
  op: "Identity"
  input: "mean_2/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_2/count/Assign"
  op: "Assign"
  input: "mean_2/count"
  input: "mean_2/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_2/count/read"
  op: "Identity"
  input: "mean_2/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean_2/Cast"
  op: "Cast"
  input: "mean_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_2/Sum"
  op: "Sum"
  input: "truediv_2"
  input: "mean_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_2/AssignAdd"
  op: "AssignAdd"
  input: "mean_2/total"
  input: "mean_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_2/AssignAdd_1"
  op: "AssignAdd"
  input: "mean_2/count"
  input: "mean_2/Cast"
  input: "^truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_2/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/Maximum"
  op: "Maximum"
  input: "mean_2/count/read"
  input: "mean_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/value"
  op: "DivNoNan"
  input: "mean_2/total/read"
  input: "mean_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_2/Maximum_1"
  op: "Maximum"
  input: "mean_2/AssignAdd_1"
  input: "mean_2/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_2/update_op"
  op: "DivNoNan"
  input: "mean_2/AssignAdd"
  input: "mean_2/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_9"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_10"
  op: "Reshape"
  input: "GatherV2_3"
  input: "Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Equal_6"
  op: "Equal"
  input: "Reshape_9"
  input: "Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_9"
  op: "Cast"
  input: "Equal_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Cast_10/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "Cast_10"
  op: "Cast"
  input: "Cast_10/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Sum_6/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_6"
  op: "Sum"
  input: "Cast_9"
  input: "Sum_6/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Minimum_3"
  op: "Minimum"
  input: "Cast_10"
  input: "Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8/Square"
  op: "Square"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_8/Sum"
  op: "Sum"
  input: "l2_normalize_8/Square"
  input: "l2_normalize_8/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_8/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_8/Maximum"
  op: "Maximum"
  input: "l2_normalize_8/Sum"
  input: "l2_normalize_8/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_8/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_8"
  op: "Mul"
  input: "Slice"
  input: "l2_normalize_8/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9/Square"
  op: "Square"
  input: "Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_9/Sum"
  op: "Sum"
  input: "l2_normalize_9/Square"
  input: "l2_normalize_9/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_9/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize_9/Maximum"
  op: "Maximum"
  input: "l2_normalize_9/Sum"
  input: "l2_normalize_9/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_9/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize_9"
  op: "Mul"
  input: "Slice_1"
  input: "l2_normalize_9/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_3"
  op: "Transpose"
  input: "l2_normalize_9"
  input: "transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_4"
  op: "MatMul"
  input: "l2_normalize_8"
  input: "transpose_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "Const_5"
  input: "MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Neg_3"
  op: "Neg"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "Exp_3"
  op: "Exp"
  input: "Neg_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "TopKV2_3/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TopKV2_3"
  op: "TopKV2"
  input: "Exp_3"
  input: "TopKV2_3/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "GatherV2_7/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "GatherV2_7"
  op: "GatherV2"
  input: "GatherV2_3"
  input: "TopKV2_3:1"
  input: "GatherV2_7/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_11"
  op: "Reshape"
  input: "GatherV2_1"
  input: "Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Equal_7"
  op: "Equal"
  input: "GatherV2_7"
  input: "Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_11"
  op: "Cast"
  input: "Equal_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Sum_7/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_7"
  op: "Sum"
  input: "Cast_11"
  input: "Sum_7/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "Sum_7"
  input: "Minimum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "mean_3/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_3/total/Assign"
  op: "Assign"
  input: "mean_3/total"
  input: "mean_3/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_3/total/read"
  op: "Identity"
  input: "mean_3/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean_3/count/Assign"
  op: "Assign"
  input: "mean_3/count"
  input: "mean_3/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean_3/count/read"
  op: "Identity"
  input: "mean_3/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "mean_3/Cast"
  op: "Cast"
  input: "mean_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_3/Sum"
  op: "Sum"
  input: "truediv_3"
  input: "mean_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_3/AssignAdd"
  op: "AssignAdd"
  input: "mean_3/total"
  input: "mean_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_3/AssignAdd_1"
  op: "AssignAdd"
  input: "mean_3/count"
  input: "mean_3/Cast"
  input: "^truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_3/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/Maximum"
  op: "Maximum"
  input: "mean_3/count/read"
  input: "mean_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/value"
  op: "DivNoNan"
  input: "mean_3/total/read"
  input: "mean_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_3/Maximum_1"
  op: "Maximum"
  input: "mean_3/AssignAdd_1"
  input: "mean_3/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_3/update_op"
  op: "DivNoNan"
  input: "mean_3/AssignAdd"
  input: "mean_3/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_1"
      }
    }
  }
}
node {
  name: "Precision_1"
  op: "ScalarSummary"
  input: "Precision_1/tags"
  input: "mean/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_5/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_5"
      }
    }
  }
}
node {
  name: "Precision_5"
  op: "ScalarSummary"
  input: "Precision_5/tags"
  input: "mean_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_10/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_10"
      }
    }
  }
}
node {
  name: "Precision_10"
  op: "ScalarSummary"
  input: "Precision_10/tags"
  input: "mean_2/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Precision_20/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Precision_20"
      }
    }
  }
}
node {
  name: "Precision_20"
  op: "ScalarSummary"
  input: "Precision_20/tags"
  input: "mean_3/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Precision_1"
  input: "Precision_5"
  input: "Precision_10"
  input: "Precision_20"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: "ball/mean_vectors"
        string_val: "ball/scale"
        string_val: "conv1_1/conv1_1/bn/beta"
        string_val: "conv1_1/conv1_1/bn/moving_mean"
        string_val: "conv1_1/conv1_1/bn/moving_variance"
        string_val: "conv1_1/weights"
        string_val: "conv1_2/conv1_2/bn/beta"
        string_val: "conv1_2/conv1_2/bn/moving_mean"
        string_val: "conv1_2/conv1_2/bn/moving_variance"
        string_val: "conv1_2/weights"
        string_val: "conv2_1/1/conv2_1/1/bn/beta"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_mean"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_variance"
        string_val: "conv2_1/1/weights"
        string_val: "conv2_1/2/biases"
        string_val: "conv2_1/2/weights"
        string_val: "conv2_3/1/conv2_3/1/bn/beta"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_mean"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_variance"
        string_val: "conv2_3/1/weights"
        string_val: "conv2_3/2/biases"
        string_val: "conv2_3/2/weights"
        string_val: "conv2_3/bn/beta"
        string_val: "conv2_3/bn/moving_mean"
        string_val: "conv2_3/bn/moving_variance"
        string_val: "conv3_1/1/conv3_1/1/bn/beta"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_mean"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_variance"
        string_val: "conv3_1/1/weights"
        string_val: "conv3_1/2/biases"
        string_val: "conv3_1/2/weights"
        string_val: "conv3_1/bn/beta"
        string_val: "conv3_1/bn/moving_mean"
        string_val: "conv3_1/bn/moving_variance"
        string_val: "conv3_1/projection/weights"
        string_val: "conv3_3/1/conv3_3/1/bn/beta"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_mean"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_variance"
        string_val: "conv3_3/1/weights"
        string_val: "conv3_3/2/biases"
        string_val: "conv3_3/2/weights"
        string_val: "conv3_3/bn/beta"
        string_val: "conv3_3/bn/moving_mean"
        string_val: "conv3_3/bn/moving_variance"
        string_val: "conv4_1/1/conv4_1/1/bn/beta"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_mean"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_variance"
        string_val: "conv4_1/1/weights"
        string_val: "conv4_1/2/biases"
        string_val: "conv4_1/2/weights"
        string_val: "conv4_1/bn/beta"
        string_val: "conv4_1/bn/moving_mean"
        string_val: "conv4_1/bn/moving_variance"
        string_val: "conv4_1/projection/weights"
        string_val: "conv4_3/1/conv4_3/1/bn/beta"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_mean"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_variance"
        string_val: "conv4_3/1/weights"
        string_val: "conv4_3/2/biases"
        string_val: "conv4_3/2/weights"
        string_val: "conv4_3/bn/beta"
        string_val: "conv4_3/bn/moving_mean"
        string_val: "conv4_3/bn/moving_variance"
        string_val: "fc1/fc1/bn/beta"
        string_val: "fc1/fc1/bn/moving_mean"
        string_val: "fc1/fc1/bn/moving_variance"
        string_val: "fc1/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "ball/mean_vectors"
  input: "ball/scale"
  input: "conv1_1/conv1_1/bn/beta"
  input: "conv1_1/conv1_1/bn/moving_mean"
  input: "conv1_1/conv1_1/bn/moving_variance"
  input: "conv1_1/weights"
  input: "conv1_2/conv1_2/bn/beta"
  input: "conv1_2/conv1_2/bn/moving_mean"
  input: "conv1_2/conv1_2/bn/moving_variance"
  input: "conv1_2/weights"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  input: "conv2_1/1/weights"
  input: "conv2_1/2/biases"
  input: "conv2_1/2/weights"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  input: "conv2_3/1/weights"
  input: "conv2_3/2/biases"
  input: "conv2_3/2/weights"
  input: "conv2_3/bn/beta"
  input: "conv2_3/bn/moving_mean"
  input: "conv2_3/bn/moving_variance"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  input: "conv3_1/1/weights"
  input: "conv3_1/2/biases"
  input: "conv3_1/2/weights"
  input: "conv3_1/bn/beta"
  input: "conv3_1/bn/moving_mean"
  input: "conv3_1/bn/moving_variance"
  input: "conv3_1/projection/weights"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  input: "conv3_3/1/weights"
  input: "conv3_3/2/biases"
  input: "conv3_3/2/weights"
  input: "conv3_3/bn/beta"
  input: "conv3_3/bn/moving_mean"
  input: "conv3_3/bn/moving_variance"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  input: "conv4_1/1/weights"
  input: "conv4_1/2/biases"
  input: "conv4_1/2/weights"
  input: "conv4_1/bn/beta"
  input: "conv4_1/bn/moving_mean"
  input: "conv4_1/bn/moving_variance"
  input: "conv4_1/projection/weights"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  input: "conv4_3/1/weights"
  input: "conv4_3/2/biases"
  input: "conv4_3/2/weights"
  input: "conv4_3/bn/beta"
  input: "conv4_3/bn/moving_mean"
  input: "conv4_3/bn/moving_variance"
  input: "fc1/fc1/bn/beta"
  input: "fc1/fc1/bn/moving_mean"
  input: "fc1/fc1/bn/moving_variance"
  input: "fc1/weights"
  input: "global_step"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: "ball/mean_vectors"
        string_val: "ball/scale"
        string_val: "conv1_1/conv1_1/bn/beta"
        string_val: "conv1_1/conv1_1/bn/moving_mean"
        string_val: "conv1_1/conv1_1/bn/moving_variance"
        string_val: "conv1_1/weights"
        string_val: "conv1_2/conv1_2/bn/beta"
        string_val: "conv1_2/conv1_2/bn/moving_mean"
        string_val: "conv1_2/conv1_2/bn/moving_variance"
        string_val: "conv1_2/weights"
        string_val: "conv2_1/1/conv2_1/1/bn/beta"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_mean"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_variance"
        string_val: "conv2_1/1/weights"
        string_val: "conv2_1/2/biases"
        string_val: "conv2_1/2/weights"
        string_val: "conv2_3/1/conv2_3/1/bn/beta"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_mean"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_variance"
        string_val: "conv2_3/1/weights"
        string_val: "conv2_3/2/biases"
        string_val: "conv2_3/2/weights"
        string_val: "conv2_3/bn/beta"
        string_val: "conv2_3/bn/moving_mean"
        string_val: "conv2_3/bn/moving_variance"
        string_val: "conv3_1/1/conv3_1/1/bn/beta"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_mean"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_variance"
        string_val: "conv3_1/1/weights"
        string_val: "conv3_1/2/biases"
        string_val: "conv3_1/2/weights"
        string_val: "conv3_1/bn/beta"
        string_val: "conv3_1/bn/moving_mean"
        string_val: "conv3_1/bn/moving_variance"
        string_val: "conv3_1/projection/weights"
        string_val: "conv3_3/1/conv3_3/1/bn/beta"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_mean"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_variance"
        string_val: "conv3_3/1/weights"
        string_val: "conv3_3/2/biases"
        string_val: "conv3_3/2/weights"
        string_val: "conv3_3/bn/beta"
        string_val: "conv3_3/bn/moving_mean"
        string_val: "conv3_3/bn/moving_variance"
        string_val: "conv4_1/1/conv4_1/1/bn/beta"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_mean"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_variance"
        string_val: "conv4_1/1/weights"
        string_val: "conv4_1/2/biases"
        string_val: "conv4_1/2/weights"
        string_val: "conv4_1/bn/beta"
        string_val: "conv4_1/bn/moving_mean"
        string_val: "conv4_1/bn/moving_variance"
        string_val: "conv4_1/projection/weights"
        string_val: "conv4_3/1/conv4_3/1/bn/beta"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_mean"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_variance"
        string_val: "conv4_3/1/weights"
        string_val: "conv4_3/2/biases"
        string_val: "conv4_3/2/weights"
        string_val: "conv4_3/bn/beta"
        string_val: "conv4_3/bn/moving_mean"
        string_val: "conv4_3/bn/moving_variance"
        string_val: "fc1/fc1/bn/beta"
        string_val: "fc1/fc1/bn/moving_mean"
        string_val: "fc1/fc1/bn/moving_variance"
        string_val: "fc1/weights"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 68
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "ball/mean_vectors"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1502
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "ball/scale"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/beta"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_mean"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1_1/conv1_1/bn/moving_variance"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1_1/weights"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/beta"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_mean"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1_2/conv1_2/bn/moving_variance"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1_2/weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2_1/1/weights"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2_1/2/biases"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2_1/2/weights"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv2_3/1/weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv2_3/2/biases"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv2_3/2/weights"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv2_3/bn/beta"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv2_3/bn/moving_mean"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "conv2_3/bn/moving_variance"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "conv3_1/1/weights"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "conv3_1/2/biases"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "conv3_1/2/weights"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "conv3_1/bn/beta"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "conv3_1/bn/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "conv3_1/bn/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "conv3_1/projection/weights"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "conv3_3/1/weights"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "conv3_3/2/biases"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "conv3_3/2/weights"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "conv3_3/bn/beta"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "conv3_3/bn/moving_mean"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "conv3_3/bn/moving_variance"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "conv4_1/1/weights"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "conv4_1/2/biases"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "conv4_1/2/weights"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "conv4_1/bn/beta"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "conv4_1/bn/moving_mean"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "conv4_1/bn/moving_variance"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "conv4_1/projection/weights"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "conv4_3/1/weights"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "conv4_3/2/biases"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "conv4_3/2/weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "conv4_3/bn/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "conv4_3/bn/moving_mean"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "conv4_3/bn/moving_variance"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "fc1/fc1/bn/beta"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "fc1/fc1/bn/moving_mean"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "fc1/fc1/bn/moving_variance"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "fc1/weights"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1_1/conv1_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1_1/conv1_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1_1/conv1_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/conv1_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1_2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv1_2/conv1_2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv1_2/conv1_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv1_2/conv1_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_2/conv1_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv2_1/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv2_1/1/conv2_1/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv2_1/1/conv2_1/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv2_1/1/conv2_1/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/1/conv2_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv2_1/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv2_1/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv2_3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv2_3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv2_3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv2_3/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv2_3/1/conv2_3/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv2_3/1/conv2_3/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv2_3/1/conv2_3/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/1/conv2_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv2_3/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2_3/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv3_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv3_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv3_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv3_1/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv3_1/1/conv3_1/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv3_1/1/conv3_1/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "conv3_1/1/conv3_1/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/1/conv3_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "conv3_1/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "conv3_1/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv3_1/projection/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv3_3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv3_3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "conv3_3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv3_3/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv3_3/1/conv3_3/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv3_3/1/conv3_3/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv3_3/1/conv3_3/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/1/conv3_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv3_3/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv3_3/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv4_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv4_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv4_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv4_1/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv4_1/1/conv4_1/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv4_1/1/conv4_1/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "conv4_1/1/conv4_1/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/1/conv4_1/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "conv4_1/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "conv4_1/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv4_1/projection/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/projection/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv4_3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv4_3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv4_3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "conv4_3/1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv4_3/1/conv4_3/1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv4_3/1/conv4_3/1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv4_3/1/conv4_3/1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/1/conv4_3/1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv4_3/2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv4_3/2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_3/2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "fc1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "fc1/fc1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "fc1/fc1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "fc1/fc1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/fc1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "ball/mean_vectors"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/mean_vectors"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "ball/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ball/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "mean_1/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "mean_1/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "mean_2/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "mean_2/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_2/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "mean_3/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "mean_3/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_3/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 76
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 76
          }
        }
        string_val: "conv1_1/weights"
        string_val: "conv1_1/conv1_1/bn/beta"
        string_val: "conv1_1/conv1_1/bn/moving_mean"
        string_val: "conv1_1/conv1_1/bn/moving_variance"
        string_val: "conv1_2/weights"
        string_val: "conv1_2/conv1_2/bn/beta"
        string_val: "conv1_2/conv1_2/bn/moving_mean"
        string_val: "conv1_2/conv1_2/bn/moving_variance"
        string_val: "conv2_1/1/weights"
        string_val: "conv2_1/1/conv2_1/1/bn/beta"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_mean"
        string_val: "conv2_1/1/conv2_1/1/bn/moving_variance"
        string_val: "conv2_1/2/weights"
        string_val: "conv2_1/2/biases"
        string_val: "conv2_3/bn/beta"
        string_val: "conv2_3/bn/moving_mean"
        string_val: "conv2_3/bn/moving_variance"
        string_val: "conv2_3/1/weights"
        string_val: "conv2_3/1/conv2_3/1/bn/beta"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_mean"
        string_val: "conv2_3/1/conv2_3/1/bn/moving_variance"
        string_val: "conv2_3/2/weights"
        string_val: "conv2_3/2/biases"
        string_val: "conv3_1/bn/beta"
        string_val: "conv3_1/bn/moving_mean"
        string_val: "conv3_1/bn/moving_variance"
        string_val: "conv3_1/1/weights"
        string_val: "conv3_1/1/conv3_1/1/bn/beta"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_mean"
        string_val: "conv3_1/1/conv3_1/1/bn/moving_variance"
        string_val: "conv3_1/2/weights"
        string_val: "conv3_1/2/biases"
        string_val: "conv3_1/projection/weights"
        string_val: "conv3_3/bn/beta"
        string_val: "conv3_3/bn/moving_mean"
        string_val: "conv3_3/bn/moving_variance"
        string_val: "conv3_3/1/weights"
        string_val: "conv3_3/1/conv3_3/1/bn/beta"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_mean"
        string_val: "conv3_3/1/conv3_3/1/bn/moving_variance"
        string_val: "conv3_3/2/weights"
        string_val: "conv3_3/2/biases"
        string_val: "conv4_1/bn/beta"
        string_val: "conv4_1/bn/moving_mean"
        string_val: "conv4_1/bn/moving_variance"
        string_val: "conv4_1/1/weights"
        string_val: "conv4_1/1/conv4_1/1/bn/beta"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_mean"
        string_val: "conv4_1/1/conv4_1/1/bn/moving_variance"
        string_val: "conv4_1/2/weights"
        string_val: "conv4_1/2/biases"
        string_val: "conv4_1/projection/weights"
        string_val: "conv4_3/bn/beta"
        string_val: "conv4_3/bn/moving_mean"
        string_val: "conv4_3/bn/moving_variance"
        string_val: "conv4_3/1/weights"
        string_val: "conv4_3/1/conv4_3/1/bn/beta"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_mean"
        string_val: "conv4_3/1/conv4_3/1/bn/moving_variance"
        string_val: "conv4_3/2/weights"
        string_val: "conv4_3/2/biases"
        string_val: "fc1/weights"
        string_val: "fc1/fc1/bn/beta"
        string_val: "fc1/fc1/bn/moving_mean"
        string_val: "fc1/fc1/bn/moving_variance"
        string_val: "ball/mean_vectors"
        string_val: "ball/scale"
        string_val: "global_step"
        string_val: "mean/total"
        string_val: "mean/count"
        string_val: "mean_1/total"
        string_val: "mean_1/count"
        string_val: "mean_2/total"
        string_val: "mean_2/count"
        string_val: "mean_3/total"
        string_val: "mean_3/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 76
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^ball/mean_vectors/Assign"
  input: "^ball/scale/Assign"
  input: "^conv1_1/conv1_1/bn/beta/Assign"
  input: "^conv1_1/conv1_1/bn/moving_mean/Assign"
  input: "^conv1_1/conv1_1/bn/moving_variance/Assign"
  input: "^conv1_1/weights/Assign"
  input: "^conv1_2/conv1_2/bn/beta/Assign"
  input: "^conv1_2/conv1_2/bn/moving_mean/Assign"
  input: "^conv1_2/conv1_2/bn/moving_variance/Assign"
  input: "^conv1_2/weights/Assign"
  input: "^conv2_1/1/conv2_1/1/bn/beta/Assign"
  input: "^conv2_1/1/conv2_1/1/bn/moving_mean/Assign"
  input: "^conv2_1/1/conv2_1/1/bn/moving_variance/Assign"
  input: "^conv2_1/1/weights/Assign"
  input: "^conv2_1/2/biases/Assign"
  input: "^conv2_1/2/weights/Assign"
  input: "^conv2_3/1/conv2_3/1/bn/beta/Assign"
  input: "^conv2_3/1/conv2_3/1/bn/moving_mean/Assign"
  input: "^conv2_3/1/conv2_3/1/bn/moving_variance/Assign"
  input: "^conv2_3/1/weights/Assign"
  input: "^conv2_3/2/biases/Assign"
  input: "^conv2_3/2/weights/Assign"
  input: "^conv2_3/bn/beta/Assign"
  input: "^conv2_3/bn/moving_mean/Assign"
  input: "^conv2_3/bn/moving_variance/Assign"
  input: "^conv3_1/1/conv3_1/1/bn/beta/Assign"
  input: "^conv3_1/1/conv3_1/1/bn/moving_mean/Assign"
  input: "^conv3_1/1/conv3_1/1/bn/moving_variance/Assign"
  input: "^conv3_1/1/weights/Assign"
  input: "^conv3_1/2/biases/Assign"
  input: "^conv3_1/2/weights/Assign"
  input: "^conv3_1/bn/beta/Assign"
  input: "^conv3_1/bn/moving_mean/Assign"
  input: "^conv3_1/bn/moving_variance/Assign"
  input: "^conv3_1/projection/weights/Assign"
  input: "^conv3_3/1/conv3_3/1/bn/beta/Assign"
  input: "^conv3_3/1/conv3_3/1/bn/moving_mean/Assign"
  input: "^conv3_3/1/conv3_3/1/bn/moving_variance/Assign"
  input: "^conv3_3/1/weights/Assign"
  input: "^conv3_3/2/biases/Assign"
  input: "^conv3_3/2/weights/Assign"
  input: "^conv3_3/bn/beta/Assign"
  input: "^conv3_3/bn/moving_mean/Assign"
  input: "^conv3_3/bn/moving_variance/Assign"
  input: "^conv4_1/1/conv4_1/1/bn/beta/Assign"
  input: "^conv4_1/1/conv4_1/1/bn/moving_mean/Assign"
  input: "^conv4_1/1/conv4_1/1/bn/moving_variance/Assign"
  input: "^conv4_1/1/weights/Assign"
  input: "^conv4_1/2/biases/Assign"
  input: "^conv4_1/2/weights/Assign"
  input: "^conv4_1/bn/beta/Assign"
  input: "^conv4_1/bn/moving_mean/Assign"
  input: "^conv4_1/bn/moving_variance/Assign"
  input: "^conv4_1/projection/weights/Assign"
  input: "^conv4_3/1/conv4_3/1/bn/beta/Assign"
  input: "^conv4_3/1/conv4_3/1/bn/moving_mean/Assign"
  input: "^conv4_3/1/conv4_3/1/bn/moving_variance/Assign"
  input: "^conv4_3/1/weights/Assign"
  input: "^conv4_3/2/biases/Assign"
  input: "^conv4_3/2/weights/Assign"
  input: "^conv4_3/bn/beta/Assign"
  input: "^conv4_3/bn/moving_mean/Assign"
  input: "^conv4_3/bn/moving_variance/Assign"
  input: "^fc1/fc1/bn/beta/Assign"
  input: "^fc1/fc1/bn/moving_mean/Assign"
  input: "^fc1/fc1/bn/moving_variance/Assign"
  input: "^fc1/weights/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^mean/count/Assign"
  input: "^mean/total/Assign"
  input: "^mean_1/count/Assign"
  input: "^mean_1/total/Assign"
  input: "^mean_2/count/Assign"
  input: "^mean_2/total/Assign"
  input: "^mean_3/count/Assign"
  input: "^mean_3/total/Assign"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "init_all_tables"
  op: "NoOp"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
versions {
  producer: 1286
}
